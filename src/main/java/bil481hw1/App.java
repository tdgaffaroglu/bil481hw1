/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package bil481hw1;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import spark.ModelAndView;
import spark.template.mustache.MustacheTemplateEngine;
import static spark.Spark.get;
import static spark.Spark.post;
import static spark.Spark.port;

public class App {
    public String getGreeting() {
        return "Hello world.";
    }

    public static void main(String[] args) {
        Logger logger = LogManager.getLogger(App.class);
        logger.error("hello world");

        int port = Integer.parseInt(System.getenv("PORT"));
        port(port);
        logger.error("Current port number:" + port);
        

        System.out.println(new App().getGreeting());

        get("/", (req, res) -> "Hello, World!!!");

        get("/compute",
            (rq, rs) -> {
                Map<String, String> map = new HashMap<String, String>();
                map.put("result", "not computed yet!");
                return new ModelAndView(map, "compute.mustache");
            },
            new MustacheTemplateEngine()
        );

        post("/compute", (req, res) -> {
            //System.out.println(req.queryParams("input1"));
            //System.out.println(req.queryParams("input2"));
  
            String input1 = req.queryParams("input1");
            java.util.Scanner sc1 = new java.util.Scanner(input1);
            sc1.useDelimiter("[;\r\n]+");
            java.util.ArrayList<Integer> inputList = new java.util.ArrayList<>();
            while (sc1.hasNext())
            {
              int value = Integer.parseInt(sc1.next().replaceAll("\\s",""));
              inputList.add(value);
            }
            sc1.close();
            System.out.println(inputList);

            String input2 = req.queryParams("input2").replaceAll("\\s","");
            int input2AsInt = Integer.parseInt(input2);

            String input3 = req.queryParams("input3").replaceAll("\\s","");
            int input3AsInt = Integer.parseInt(input3);
  
            boolean result = App.search(inputList, input2AsInt , input3AsInt);
  
            Map<String, Boolean> map = new HashMap<String, Boolean>();
            map.put("result", result);
            return new ModelAndView(map, "compute.mustache");
          }, new MustacheTemplateEngine());
  

    }

    // searches for any of {e,e2,e+e2} exists in given
    public static boolean search(ArrayList<Integer> array, int e , int e2) {
        System.out.println("inside search");

        if (array == null) return false;

        for (int elt : array) {
            if ( (elt == e) ||  (elt == e2) || (elt == (e+e2) )) 
                return true;
        }
        return false;
    }


}